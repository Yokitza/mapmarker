{"ast":null,"code":"import _objectSpread from\"C:/Users/Yokitza/Desktop/mapmarker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{withScriptjs,withGoogleMap,GoogleMap,Marker}from\"react-google-maps\";import{jsx as _jsx}from\"react/jsx-runtime\";var Map=withScriptjs(withGoogleMap(function(_ref){var markers=_ref.markers,setMarkers=_ref.setMarkers,addMarker=_ref.addMarker;var colorsArray=[\"red\",\"green\",\"blue\",\"yellow\"];var svgMarker={path:\"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",fillColor:\"transparent\",fillOpacity:0.6,strokeWeight:0,rotation:0,scale:2};var changeMarkerColor=function changeMarkerColor(marker){var newColorIndex=(colorsArray.indexOf(marker.color)+1)%colorsArray.length;var newMarkersArray=markers.map(function(currMarker){if(currMarker.id===marker.id){return _objectSpread(_objectSpread({},currMarker),{},{color:colorsArray[newColorIndex]});}else{return currMarker;}});setMarkers(newMarkersArray);};var removeMarker=function removeMarker(id){var newMarkersArray=markers.filter(function(marker){return marker.id!==id;});setMarkers(newMarkersArray);};return/*#__PURE__*/_jsx(GoogleMap,{defaultZoom:8,defaultCenter:{lat:40.5,lng:-74},onClick:function onClick(e){addMarker(e.latLng.lat(),e.latLng.lng());},children:markers.map(function(marker){return/*#__PURE__*/_jsx(Marker,{position:{lat:marker.lat,lng:marker.lng},icon:_objectSpread(_objectSpread({},svgMarker),{},{fillColor:marker.color}),clickable:true,onClick:function onClick(e){changeMarkerColor(marker);},onRightClick:function onRightClick(){removeMarker(marker.id);}},marker.id);})});}));export default Map;","map":{"version":3,"sources":["C:/Users/Yokitza/Desktop/mapmarker/src/Map.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","markers","setMarkers","addMarker","colorsArray","svgMarker","path","fillColor","fillOpacity","strokeWeight","rotation","scale","changeMarkerColor","marker","newColorIndex","indexOf","color","length","newMarkersArray","map","currMarker","id","removeMarker","filter","lat","lng","e","latLng"],"mappings":"wJACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,YADF,CAEEC,aAFF,CAGEC,SAHF,CAIEC,MAJF,KAKO,mBALP,C,2CAOA,GAAMC,CAAAA,GAAG,CAAGJ,YAAY,CACtBC,aAAa,CAAC,cAAwC,IAArCI,CAAAA,OAAqC,MAArCA,OAAqC,CAA5BC,UAA4B,MAA5BA,UAA4B,CAAhBC,SAAgB,MAAhBA,SAAgB,CACpD,GAAMC,CAAAA,WAAW,CAAG,CAAC,KAAD,CAAQ,OAAR,CAAiB,MAAjB,CAAyB,QAAzB,CAApB,CACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,IAAI,CAAE,oSADU,CAEhBC,SAAS,CAAE,aAFK,CAGhBC,WAAW,CAAE,GAHG,CAIhBC,YAAY,CAAE,CAJE,CAKhBC,QAAQ,CAAE,CALM,CAMhBC,KAAK,CAAE,CANS,CAAlB,CASA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAY,CACpC,GAAMC,CAAAA,aAAa,CACjB,CAACV,WAAW,CAACW,OAAZ,CAAoBF,MAAM,CAACG,KAA3B,EAAoC,CAArC,EAA0CZ,WAAW,CAACa,MADxD,CAEA,GAAIC,CAAAA,eAAe,CAAGjB,OAAO,CAACkB,GAAR,CAAY,SAACC,UAAD,CAAgB,CAChD,GAAIA,UAAU,CAACC,EAAX,GAAkBR,MAAM,CAACQ,EAA7B,CAAiC,CAC/B,sCAAYD,UAAZ,MAAwBJ,KAAK,CAAEZ,WAAW,CAACU,aAAD,CAA1C,GACD,CAFD,IAEO,CACL,MAAOM,CAAAA,UAAP,CACD,CACF,CANqB,CAAtB,CAOAlB,UAAU,CAACgB,eAAD,CAAV,CACD,CAXD,CAaA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,EAAD,CAAQ,CAC3B,GAAIH,CAAAA,eAAe,CAAGjB,OAAO,CAACsB,MAAR,CAAe,SAACV,MAAD,CAAY,CAC/C,MAAOA,CAAAA,MAAM,CAACQ,EAAP,GAAcA,EAArB,CACD,CAFqB,CAAtB,CAGAnB,UAAU,CAACgB,eAAD,CAAV,CACD,CALD,CAOA,mBACE,KAAC,SAAD,EACE,WAAW,CAAE,CADf,CAEE,aAAa,CAAE,CAAEM,GAAG,CAAE,IAAP,CAAaC,GAAG,CAAE,CAAC,EAAnB,CAFjB,CAGE,OAAO,CAAE,iBAACC,CAAD,CAAO,CACdvB,SAAS,CAACuB,CAAC,CAACC,MAAF,CAASH,GAAT,EAAD,CAAiBE,CAAC,CAACC,MAAF,CAASF,GAAT,EAAjB,CAAT,CACD,CALH,UAOGxB,OAAO,CAACkB,GAAR,CAAY,SAACN,MAAD,CAAY,CACvB,mBACE,KAAC,MAAD,EAEE,QAAQ,CAAE,CAAEW,GAAG,CAAEX,MAAM,CAACW,GAAd,CAAmBC,GAAG,CAAEZ,MAAM,CAACY,GAA/B,CAFZ,CAGE,IAAI,gCAAOpB,SAAP,MAAkBE,SAAS,CAAEM,MAAM,CAACG,KAApC,EAHN,CAIE,SAAS,KAJX,CAKE,OAAO,CAAE,iBAACU,CAAD,CAAO,CACdd,iBAAiB,CAACC,MAAD,CAAjB,CACD,CAPH,CAQE,YAAY,CAAE,uBAAM,CAClBS,YAAY,CAACT,MAAM,CAACQ,EAAR,CAAZ,CACD,CAVH,EACOR,MAAM,CAACQ,EADd,CADF,CAcD,CAfA,CAPH,EADF,CA0BD,CAzDY,CADS,CAAxB,CA6DA,cAAerB,CAAAA,GAAf","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\n \r\nconst Map = withScriptjs(\r\n  withGoogleMap(({ markers, setMarkers, addMarker }) => {\r\n    const colorsArray = [\"red\", \"green\", \"blue\", \"yellow\"];\r\n    const svgMarker = {\r\n      path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\r\n      fillColor: \"transparent\",\r\n      fillOpacity: 0.6,\r\n      strokeWeight: 0,\r\n      rotation: 0,\r\n      scale: 2,\r\n    };\r\n \r\n    const changeMarkerColor = (marker) => {\r\n      const newColorIndex =\r\n        (colorsArray.indexOf(marker.color) + 1) % colorsArray.length;\r\n      let newMarkersArray = markers.map((currMarker) => {\r\n        if (currMarker.id === marker.id) {\r\n          return { ...currMarker, color: colorsArray[newColorIndex] };\r\n        } else {\r\n          return currMarker;\r\n        }  \r\n      });\r\n      setMarkers(newMarkersArray);\r\n    };\r\n \r\n    const removeMarker = (id) => {\r\n      let newMarkersArray = markers.filter((marker) => {\r\n        return marker.id !== id;\r\n      });\r\n      setMarkers(newMarkersArray);\r\n    };\r\n \r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{ lat: 40.5, lng: -74 }}\r\n        onClick={(e) => {\r\n          addMarker(e.latLng.lat(), e.latLng.lng());\r\n        }}\r\n      >\r\n        {markers.map((marker) => {\r\n          return (\r\n            <Marker\r\n              key={marker.id}\r\n              position={{ lat: marker.lat, lng: marker.lng }}\r\n              icon={{ ...svgMarker, fillColor: marker.color }}\r\n              clickable\r\n              onClick={(e) => {\r\n                changeMarkerColor(marker);\r\n              }}\r\n              onRightClick={() => {\r\n                removeMarker(marker.id);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </GoogleMap>\r\n    );\r\n  })\r\n);\r\n \r\nexport default Map;"]},"metadata":{},"sourceType":"module"}