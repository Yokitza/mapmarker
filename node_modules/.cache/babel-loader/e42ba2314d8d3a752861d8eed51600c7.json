{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yokitza\\\\Desktop\\\\mapmarker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Map from \"./Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var _window$localStorage;\n\n  const appStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n  const LOCAL_STORAGE_KEY = \"markers\";\n  let defaultMarkersState = JSON.parse((_window$localStorage = window.localStorage) === null || _window$localStorage === void 0 ? void 0 : _window$localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n  const [markers, _setMarkers] = React.useState(defaultMarkersState);\n\n  const setMarkers = values => {\n    _setMarkers(values);\n\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n  };\n\n  const [batchValue, setBatchValue] = React.useState(null);\n\n  const addMarker = (lat, lng) => {\n    const newMarker = {\n      id: Math.random() * 1000,\n      lat: lat,\n      lng: lng,\n      color: \"red\"\n    };\n    let newMarkersArray = [...markers, newMarker];\n    setMarkers([...newMarkersArray]);\n  };\n\n  const addMarkers = valueString => {\n    if (!valueString) {\n      return;\n    }\n\n    let markerStrings = valueString.split(\"\\n\");\n    let newMarkersArray = [];\n    markerStrings.forEach(markerString => {\n      let markerValues = markerString.split(\",\");\n      newMarkersArray.push({\n        id: Math.random() * 1000,\n        lat: parseFloat(markerValues[0]),\n        lng: parseFloat(markerValues[1]),\n        color: markerValues[2] ? markerValues[2] : \"red\"\n      });\n    });\n    setMarkers([...markers, ...newMarkersArray]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: appStyles,\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      addMarker: addMarker,\n      markers: markers,\n      setMarkers: setMarkers,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUjTS_5RvEUsxU3Pq6lya1WHJngcFnieY&v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: appStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: appStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: appStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        width: \"10vw\",\n        minWidth: \"15rem\",\n        position: \"absolute\",\n        bottom: \"0\",\n        margin: \"10px\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        padding: \"1rem\",\n        borderRadius: \"3px\",\n        boxShadow: \"rgb(0 0 0 / 30%) 0px 1px 4px -1px;\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Batch box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        style: {\n          height: \"10rem\",\n          resize: \"none\",\n          marginBottom: \"1rem\"\n        },\n        value: batchValue,\n        onChange: e => {\n          setBatchValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"google\",\n        onClick: () => addMarkers(batchValue),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2vR6YJ77fUGQzbUZakcFOttHueg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Yokitza/Desktop/mapmarker/src/App.js"],"names":["React","Map","App","appStyles","height","width","LOCAL_STORAGE_KEY","defaultMarkersState","JSON","parse","window","localStorage","getItem","markers","_setMarkers","useState","setMarkers","values","setItem","stringify","batchValue","setBatchValue","addMarker","lat","lng","newMarker","id","Math","random","color","newMarkersArray","addMarkers","valueString","markerStrings","split","forEach","markerString","markerValues","push","parseFloat","backgroundColor","minWidth","position","bottom","margin","left","display","justifyContent","flexDirection","textAlign","padding","borderRadius","boxShadow","marginTop","resize","marginBottom","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Map from \"./Map\";\nconst App = () => {\n  const appStyles = {\n    height: \"100vh\",\n    width: \"100%\",\n  };\n  const LOCAL_STORAGE_KEY = \"markers\";\n  let defaultMarkersState =\n    JSON.parse(window.localStorage?.getItem(LOCAL_STORAGE_KEY)) || [];\n  const [markers, _setMarkers] = React.useState(defaultMarkersState);\n  const setMarkers = (values) => {\n    _setMarkers(values);\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n  };\n  const [batchValue, setBatchValue] = React.useState(null);\n  const addMarker = (lat, lng) => {\n    const newMarker = {\n      id: Math.random() * 1000,\n      lat: lat,\n      lng: lng,\n      color: \"red\",\n    };\n    let newMarkersArray = [...markers, newMarker];\n    setMarkers([...newMarkersArray]);\n  };\n  const addMarkers = (valueString) => {\n    if (!valueString) {\n      return;\n    }\n    let markerStrings = valueString.split(\"\\n\");\n    let newMarkersArray = [];\n    markerStrings.forEach((markerString) => {\n      let markerValues = markerString.split(\",\");\n      newMarkersArray.push({\n        id: Math.random() * 1000,\n        lat: parseFloat(markerValues[0]),\n        lng: parseFloat(markerValues[1]),\n        color: markerValues[2] ? markerValues[2] : \"red\",\n      });\n    });\n    setMarkers([...markers, ...newMarkersArray]);\n  };\n  return (\n    <div style={appStyles}>\n      <Map\n        addMarker={addMarker}\n        markers={markers}\n        setMarkers={setMarkers}\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUjTS_5RvEUsxU3Pq6lya1WHJngcFnieY&v=3.exp&libraries=geometry,drawing,places\"\n        loadingElement={<div style={appStyles} />}\n        containerElement={<div style={appStyles} />}\n        mapElement={<div style={appStyles} />}\n      />\n      <div\n        style={{\n          backgroundColor: \"white\",\n          width: \"10vw\",\n          minWidth: \"15rem\",\n          position: \"absolute\",\n          bottom: \"0\",\n          margin: \"10px\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          textAlign: \"center\",\n          padding: \"1rem\",\n          borderRadius: \"3px\",\n          boxShadow: \"rgb(0 0 0 / 30%) 0px 1px 4px -1px;\",\n        }}\n      >\n        <h2 style={{ marginTop: 0 }}>Batch box</h2>\n        <textarea\n          rows=\"4\"\n          style={{ height: \"10rem\", resize: \"none\", marginBottom: \"1rem\" }}\n          value={batchValue}\n          onChange={(e) => {\n            setBatchValue(e.target.value);\n          }}\n        />\n        <button className=\"google\" onClick={() => addMarkers(batchValue)}>\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n \nexport default App;\n \n "]},"metadata":{},"sourceType":"module"}