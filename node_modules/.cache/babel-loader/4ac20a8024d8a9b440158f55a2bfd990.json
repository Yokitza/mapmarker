{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yokitza\\\\Desktop\\\\mapmarker\\\\src\\\\Map.js\";\nimport React from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = withScriptjs(_c2 = withGoogleMap(_c = ({\n  markers,\n  setMarkers,\n  addMarker\n}) => {\n  const colorsArray = [\"red\", \"green\", \"blue\", \"yellow\"];\n  const svgMarker = {\n    path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\n    fillColor: \"transparent\",\n    fillOpacity: 0.6,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 2\n  };\n\n  const changeMarkerColor = marker => {\n    const newColorIndex = (colorsArray.indexOf(marker.color) + 1) % colorsArray.length;\n    let newMarkersArray = markers.map(currMarker => {\n      if (currMarker.id === marker.id) {\n        return { ...currMarker,\n          color: colorsArray[newColorIndex]\n        };\n      } else {\n        return currMarker;\n      }\n    });\n    setMarkers(newMarkersArray);\n  };\n\n  const removeMarker = id => {\n    let newMarkersArray = markers.filter(marker => {\n      return marker.id !== id;\n    });\n    setMarkers(newMarkersArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 40.5,\n      lng: -74\n    },\n    onClick: e => {\n      addMarker(e.latLng.lat(), e.latLng.lng());\n    },\n    children: markers.map(marker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: { ...svgMarker,\n          fillColor: marker.color\n        },\n        clickable: true,\n        onClick: e => {\n          changeMarkerColor(marker);\n        },\n        onRightClick: () => {\n          removeMarker(marker.id);\n        }\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}));\n_c3 = Map;\nexport default Map;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c2, \"Map$withScriptjs\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"sources":["C:/Users/Yokitza/Desktop/mapmarker/src/Map.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","markers","setMarkers","addMarker","colorsArray","svgMarker","path","fillColor","fillOpacity","strokeWeight","rotation","scale","changeMarkerColor","marker","newColorIndex","indexOf","color","length","newMarkersArray","map","currMarker","id","removeMarker","filter","lat","lng","e","latLng"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;;AAOA,MAAMC,GAAG,GAAGJ,YAAY,OACtBC,aAAa,MAAC,CAAC;AAAEI,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AACpD,QAAMC,WAAW,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,QAAzB,CAApB;AACA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAE,oSADU;AAEhBC,IAAAA,SAAS,EAAE,aAFK;AAGhBC,IAAAA,WAAW,EAAE,GAHG;AAIhBC,IAAAA,YAAY,EAAE,CAJE;AAKhBC,IAAAA,QAAQ,EAAE,CALM;AAMhBC,IAAAA,KAAK,EAAE;AANS,GAAlB;;AASA,QAAMC,iBAAiB,GAAIC,MAAD,IAAY;AACpC,UAAMC,aAAa,GACjB,CAACV,WAAW,CAACW,OAAZ,CAAoBF,MAAM,CAACG,KAA3B,IAAoC,CAArC,IAA0CZ,WAAW,CAACa,MADxD;AAEA,QAAIC,eAAe,GAAGjB,OAAO,CAACkB,GAAR,CAAaC,UAAD,IAAgB;AAChD,UAAIA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAA7B,EAAiC;AAC/B,eAAO,EAAE,GAAGD,UAAL;AAAiBJ,UAAAA,KAAK,EAAEZ,WAAW,CAACU,aAAD;AAAnC,SAAP;AACD,OAFD,MAEO;AACL,eAAOM,UAAP;AACD;AACF,KANqB,CAAtB;AAOAlB,IAAAA,UAAU,CAACgB,eAAD,CAAV;AACD,GAXD;;AAaA,QAAMI,YAAY,GAAID,EAAD,IAAQ;AAC3B,QAAIH,eAAe,GAAGjB,OAAO,CAACsB,MAAR,CAAgBV,MAAD,IAAY;AAC/C,aAAOA,MAAM,CAACQ,EAAP,KAAcA,EAArB;AACD,KAFqB,CAAtB;AAGAnB,IAAAA,UAAU,CAACgB,eAAD,CAAV;AACD,GALD;;AAOA,sBACE,QAAC,SAAD;AACE,IAAA,WAAW,EAAE,CADf;AAEE,IAAA,aAAa,EAAE;AAAEM,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE,CAAC;AAAnB,KAFjB;AAGE,IAAA,OAAO,EAAGC,CAAD,IAAO;AACdvB,MAAAA,SAAS,CAACuB,CAAC,CAACC,MAAF,CAASH,GAAT,EAAD,EAAiBE,CAAC,CAACC,MAAF,CAASF,GAAT,EAAjB,CAAT;AACD,KALH;AAAA,cAOGxB,OAAO,CAACkB,GAAR,CAAaN,MAAD,IAAY;AACvB,0BACE,QAAC,MAAD;AAEE,QAAA,QAAQ,EAAE;AAAEW,UAAAA,GAAG,EAAEX,MAAM,CAACW,GAAd;AAAmBC,UAAAA,GAAG,EAAEZ,MAAM,CAACY;AAA/B,SAFZ;AAGE,QAAA,IAAI,EAAE,EAAE,GAAGpB,SAAL;AAAgBE,UAAAA,SAAS,EAAEM,MAAM,CAACG;AAAlC,SAHR;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,OAAO,EAAGU,CAAD,IAAO;AACdd,UAAAA,iBAAiB,CAACC,MAAD,CAAjB;AACD,SAPH;AAQE,QAAA,YAAY,EAAE,MAAM;AAClBS,UAAAA,YAAY,CAACT,MAAM,CAACQ,EAAR,CAAZ;AACD;AAVH,SACOR,MAAM,CAACQ,EADd;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfA;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAzDY,CADS,CAAxB;MAAMrB,G;AA6DN,eAAeA,GAAf","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\n \r\nconst Map = withScriptjs(\r\n  withGoogleMap(({ markers, setMarkers, addMarker }) => {\r\n    const colorsArray = [\"red\", \"green\", \"blue\", \"yellow\"];\r\n    const svgMarker = {\r\n      path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\r\n      fillColor: \"transparent\",\r\n      fillOpacity: 0.6,\r\n      strokeWeight: 0,\r\n      rotation: 0,\r\n      scale: 2,\r\n    };\r\n \r\n    const changeMarkerColor = (marker) => {\r\n      const newColorIndex =\r\n        (colorsArray.indexOf(marker.color) + 1) % colorsArray.length;\r\n      let newMarkersArray = markers.map((currMarker) => {\r\n        if (currMarker.id === marker.id) {\r\n          return { ...currMarker, color: colorsArray[newColorIndex] };\r\n        } else {\r\n          return currMarker;\r\n        }  \r\n      });\r\n      setMarkers(newMarkersArray);\r\n    };\r\n \r\n    const removeMarker = (id) => {\r\n      let newMarkersArray = markers.filter((marker) => {\r\n        return marker.id !== id;\r\n      });\r\n      setMarkers(newMarkersArray);\r\n    };\r\n \r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{ lat: 40.5, lng: -74 }}\r\n        onClick={(e) => {\r\n          addMarker(e.latLng.lat(), e.latLng.lng());\r\n        }}\r\n      >\r\n        {markers.map((marker) => {\r\n          return (\r\n            <Marker\r\n              key={marker.id}\r\n              position={{ lat: marker.lat, lng: marker.lng }}\r\n              icon={{ ...svgMarker, fillColor: marker.color }}\r\n              clickable\r\n              onClick={(e) => {\r\n                changeMarkerColor(marker);\r\n              }}\r\n              onRightClick={() => {\r\n                removeMarker(marker.id);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </GoogleMap>\r\n    );\r\n  })\r\n);\r\n \r\nexport default Map;"]},"metadata":{},"sourceType":"module"}